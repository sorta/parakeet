{"version":3,"sources":["main.scss"],"names":[],"mappings":"AAsFA,UACoB,WADpB,UACY,UADZ,UACY,gBADZ,UACoB,UADpB,UACY,UADZ,UACY,gBADZ,UACoB,gBADpB,UACoB,YADpB,UACY,gBADZ,WACY,UADZ,WACoB,eADpB,WACY,eADZ,UACY,WADZ,UACoB,WADpB,UACoB,gBADpB,UACY,UADZ,UACoB,UADpB,UACY,gBADZ,UACoB,gBADpB,UACoB,UADpB,UACY,gBADZ,WACY,UADZ,WACoB,gBADpB,WACY,gBADZ,UACY,WADZ,UACoB,WADpB,UACY,WADZ,UACoB,UADpB,UACY,UADZ,UACY,UADZ,UACoB,gBADpB,UACoB,YADpB,UACY,gBADZ,WACY,UADZ,WACoB,gBADpB,WACY,UADZ,UACoB,WADpB,UACY,WADZ,UACY,iBADZ,UACoB,WADpB,UACY,UADZ,UACY,gBADZ,UACoB,gBADpB,UACoB,UADpB,UACY,gBADZ,WACY,UADZ,WACoB,gBADpB,WACY,gBADZ,UACY,WADZ,UACoB,WADpB,UACoB,iBADpB,UACY,WADZ,UACY,WADZ,UACoB,gBADpB,UACY,gBADZ,UACoB,YADpB,UACY,gBADZ,WACY,UADZ,WACoB,gBADpB,WACY,gBADZ,UACY,WADZ,UACoB,WADpB,UACoB,WADpB,UACY,WADZ,UACoB,WADpB,UACY,WADZ,UACoB,gBADpB,UACoB,UADpB,UACY,gBADZ,WACY,UADZ,WACoB,gBADpB,WACY,UADZ,UACY,WADZ,UACoB,WADpB,UACY,iBADZ,UACoB,WADpB,UACY,WADZ,UACY,iBADZ,UACoB,WADpB,UACoB,YADpB,UACY,gBADZ,WACY,UADZ,WACoB,gBADpB,WACY,gBADZ,UACY,WADZ,UACoB,WADpB,UACoB,iBADpB,UACY,WADZ,UACY,WADZ,UACoB,iBADpB,UACY,iBADZ,UACY,WADZ,UACoB,gBADpB,WACY,UADZ,WACoB,gBADpB,WACY,gBADZ,UACY,WADZ,UACoB,WADpB,UACoB,WADpB,UACY,WADZ,UACY,WADZ,UACoB,WADpB,UACY,iBADZ,UACoB,aADpB,UACY,WADZ,WACY,UADZ,WACoB,gBADpB,WACY,UADZ,WACY,YADZ,WACoB,WADpB,WACoB,iBADpB,WACY,WADZ,WACoB,WADpB,WACY,iBADZ,WACoB,iBADpB,WACoB,WADpB,WACY,iBADZ,YACY,WADZ,YACoB,gBADpB,YACY,gBADZ,WACY,YADZ,WACoB,WADpB,WACY,iBADZ,WACoB,WADpB,WACY,WADZ,WACY,iBADZ,WACoB,iBADpB,WACoB,aADpB,WACY,iBADZ,YACY,WADZ,YACoB,WADpB,YACY,gBADZ,WACoB,YADpB,WACY,WADZ,WACY,WADZ,WACoB,WADpB,WACY,WADZ,WACY,WADZ,WACoB,iBADpB,WACoB,WADpB,WACY,iBADZ,YACoB,WADpB,YACY,iBADZ,YACoB,WAkBpB,KACI,sBAGJ,SApCa,iBAsCT,cACA,sBAGJ,SACI,qBAAA,oBAAA,aAlBO,sBAsBX,UACI,sBACA,sBAAA,kBAAA,cAvBO,sBA2BX,oBACI,mCACA","file":"main.css","sourcesContent":["// Variables\r\n\r\n//////////////////////////////\r\n// Rem functions and mixins //\r\n//////////////////////////////\r\n$base-font-size: 100% !default;\r\n//$base-line-height: 150%;\r\n\r\n// It strips the unit of measure and returns it\r\n@function strip-unit($num) {\r\n  @return $num / ($num * 0 + 1);\r\n}\r\n\r\n$rem-base: strip-unit($base-font-size*0.16) * 1px;\r\n\r\n@function convert-to-rem($value, $base-value: $rem-base)  {\r\n    $value: strip-unit($value) / strip-unit($base-value) * 1rem;\r\n    @if ($value == 0rem) { $value: 0; } // Turn 0em into 0\r\n    @return $value;\r\n}\r\n\r\n@function rem-calc($values, $base-value: $rem-base) {\r\n    $max: length($values);\r\n\r\n    @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }\r\n\r\n    $remValues: ();\r\n    @for $i from 1 through $max {\r\n        $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));\r\n    }\r\n    @return $remValues;\r\n}\r\n\r\n// @mixin rem-fallback($property, $values...) {\r\n//     $max: length($values);\r\n//     $pxValues: '';\r\n//     $remValues: '';\r\n\r\n//     @for $i from 1 through $max {\r\n//         $value: strip-unit(nth($values, $i));\r\n//         $pxValues: #{$pxValues + $value*16}px;\r\n\r\n//         @if $i < $max {\r\n//             $pxValues: #{$pxValues + \" \"};\r\n//         }\r\n//     }\r\n\r\n//     @for $i from 1 through $max {\r\n//         $value: strip-unit(nth($values, $i));\r\n//         $remValues: #{$remValues + $value}rem;\r\n\r\n//         @if $i < $max {\r\n//             $remValues: #{$remValues + \" \"};\r\n//         }\r\n//     }\r\n\r\n//     #{$property}: $pxValues;\r\n//     #{$property}: $remValues;\r\n// }\r\n\r\n\r\n/////////////////\r\n// Breakpoints //\r\n/////////////////\r\n$breakpoints: (\r\n    xs:  0px,\r\n    sm:  568px,\r\n    md:  768px,\r\n    lg:  1200px,\r\n    xl:  1600px,\r\n    xxl: 1920px,\r\n);\r\n$breakpoint-classes: (sm md lg);\r\n$page-width: map-get($breakpoints, lg);\r\n\r\n//////////\r\n// Grid //\r\n//////////\r\n$columns: 12;\r\n$gutter-size: 20px;\r\n$gutter-half: ($gutter-size/2);\r\n$fluid-gutter-size: 2%;\r\n$fluid-gutter-half: ($fluid-gutter-size/2);\r\n\r\n@for $i from 1 through $columns {\r\n    @for $j from 1 through $columns {\r\n        .pk-w-#{$i}-#{$j} {\r\n            width: ($i/$j) * 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////\r\n// Backgrounds //\r\n/////////////////\r\n\r\n$body-bg:  #eee;\r\n$page-bg:  #ddd;\r\n$grid-bg:  #ccc;\r\n$block-bg: #bbb;\r\n\r\n\r\n////////////\r\n// Styles //\r\n////////////\r\nbody {\r\n    background-color: $body-bg;\r\n}\r\n\r\n.pk-page {\r\n    max-width: $page-width;\r\n    margin: 0 auto;\r\n    background-color: $page-bg;\r\n}\r\n\r\n.pk-grid {\r\n    display: flex;\r\n    background-color: $grid-bg;\r\n}\r\n\r\n.pk-block {\r\n    box-sizing: border-box;\r\n    flex: 0 1 auto;\r\n    background-color: $block-bg;\r\n}\r\n\r\n.pk-block ~ .pk-block {\r\n    border-left: $gutter-size solid transparent;\r\n    border-left: rem-calc($gutter-size) solid transparent;\r\n}\r\n"],"sourceRoot":"/source/"}